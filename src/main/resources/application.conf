application {
  // TODO
}


akka {
  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off

  stdout-loglevel = "DEBUG"

  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"


  log-dead-letters = on
  log-dead-letters-during-shutdown = off

  coordinated-shutdown.run-by-jvm-shutdown-hook = on //this is the default value

  // Configure serialization
//  actor {
//    serialization-bindings {
//      "gr.fpas.bank.be.CborSerialized" = jackson-cbor
//    }
//  }

  serialization.jackson.jackson-cbor {
    serialization-features {
      WRITE_DATES_AS_TIMESTAMPS = on
      WRITE_DURATIONS_AS_TIMESTAMPS = on
    }
  }

  // Configure jdbc persistence plugins
  persistence {
      journal.plugin = "jdbc-journal"
      snapshot-store.plugin = "jdbc-snapshot-store"
    }
}

db = {
  auctions {
    profile = "slick.jdbc.H2Profile$"
    db {
      driver = "org.h2.Driver"
      url = "jdbc:h2:file:/tmp/test:auctions;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;IGNORECASE=TRUE;DATABASE_TO_UPPER=false"
      user = "sa"
      password = ""
    }
  }
}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.H2Profile$"
  db {
    driver = "org.h2.Driver"
    url = "jdbc:h2:file:/tmp/test:auctions;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;IGNORECASE=TRUE;DATABASE_TO_UPPER=false"
    user = "sa"
    password = ""
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}