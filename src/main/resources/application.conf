application {
  // TODO
}


akka {
  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = on

  stdout-loglevel = "DEBUG"

  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-dead-letters = on
  log-dead-letters-during-shutdown = off

  coordinated-shutdown.run-by-jvm-shutdown-hook = on //this is the default value

  // Configure serialization
   actor {
     serialization-bindings {
       "nl.pvdlageweg.akkahttp.CborSerialized" = jackson-cbor
     }
   }

  serialization.jackson.jackson-cbor {
    serialization-features {
      WRITE_DATES_AS_TIMESTAMPS = on
      WRITE_DURATIONS_AS_TIMESTAMPS = on
    }
  }

  // Configure jdbc persistence plugins
  persistence {
      journal {
        plugin = "jdbc-journal"
        // Enable the line below to automatically start the journal when the actorsystem is started
        auto-start-journals = ["jdbc-journal"]
      }
      snapshot-store {
        plugin = "jdbc-snapshot-store"
        // Enable the line below to automatically start the snapshot-store when the actorsystem is started
        auto-start-snapshot-stores = ["jdbc-snapshot-store"]
      }
    }
}

db = {
  auctions {
     profile = "slick.jdbc.PostgresProfile$"
    db {
      url = "jdbc:postgresql://localhost:5432/docker"
      user = "docker"
      password = "docker"
      driver = "org.postgresql.Driver"
      numThreads = 5
      maxConnections = 5
      minConnections = 1
      connectionTestQuery = SELECT 1
    }
  }
}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    url = "jdbc:postgresql://localhost:5432/docker"
    user = "docker"
    password = "docker"
    driver = "org.postgresql.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}